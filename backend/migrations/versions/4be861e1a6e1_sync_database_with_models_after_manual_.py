"""sync database with models after manual update

Revision ID: 4be861e1a6e1
Revises: 6e9236c64f33
Create Date: 2025-10-19 22:44:31.997839

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4be861e1a6e1'
down_revision: Union[str, None] = '6e9236c64f33'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('attendance_records', 'status',
               existing_type=postgresql.ENUM('Present', 'Absent', 'Half-day', name='attendance_status'),
               type_=sa.Enum('Present', 'Absent', 'HALF_DAY', name='attendancestatus'),
               existing_nullable=False)
    op.alter_column('attendance_records', 'late_hours',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               nullable=True,
               existing_server_default=sa.text('0.0'))
    op.alter_column('attendance_records', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_attendance_records_date'), 'attendance_records', ['date'], unique=False)
    op.create_index(op.f('ix_attendance_records_id'), 'attendance_records', ['id'], unique=False)
    op.drop_constraint('fk_attendance_user_id', 'attendance_records', type_='foreignkey')
    op.create_foreign_key(None, 'attendance_records', 'users', ['user_id'], ['id'], ondelete='SET NULL')
    op.alter_column('employees', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('employees', 'name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.drop_index('idx_employees_inactive_from', table_name='employees')
    op.drop_index('idx_employees_salary_effective_from', table_name='employees')
    op.drop_index('idx_employees_status', table_name='employees')
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_index(op.f('ix_employees_name'), 'employees', ['name'], unique=False)
    op.create_unique_constraint(None, 'employees', ['user_id'])
    op.drop_constraint('fk_employees_user_id', 'employees', type_='foreignkey')
    op.create_foreign_key(None, 'employees', 'users', ['user_id'], ['id'], ondelete='SET NULL')
    op.create_index(op.f('ix_holidays_date'), 'holidays', ['date'], unique=False)
    op.create_index(op.f('ix_holidays_id'), 'holidays', ['id'], unique=False)
    op.alter_column('password_resets', 'expires_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('admin', 'staff', name='user_role'),
               type_=sa.Enum('admin', 'staff', name='userrole'),
               existing_nullable=False,
               existing_server_default=sa.text("'admin'::user_role"))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'role',
               existing_type=sa.Enum('admin', 'staff', name='userrole'),
               type_=postgresql.ENUM('admin', 'staff', name='user_role'),
               existing_nullable=False,
               existing_server_default=sa.text("'admin'::user_role"))
    op.alter_column('users', 'email',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('password_resets', 'expires_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.drop_index(op.f('ix_holidays_id'), table_name='holidays')
    op.drop_index(op.f('ix_holidays_date'), table_name='holidays')
    op.drop_constraint(None, 'employees', type_='foreignkey')
    op.create_foreign_key('fk_employees_user_id', 'employees', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'employees', type_='unique')
    op.drop_index(op.f('ix_employees_name'), table_name='employees')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.create_index('idx_employees_status', 'employees', ['status'], unique=False)
    op.create_index('idx_employees_salary_effective_from', 'employees', ['salary_effective_from'], unique=False)
    op.create_index('idx_employees_inactive_from', 'employees', ['inactive_from'], unique=False)
    op.alter_column('employees', 'name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('employees', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'attendance_records', type_='foreignkey')
    op.create_foreign_key('fk_attendance_user_id', 'attendance_records', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_attendance_records_id'), table_name='attendance_records')
    op.drop_index(op.f('ix_attendance_records_date'), table_name='attendance_records')
    op.alter_column('attendance_records', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('attendance_records', 'late_hours',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               nullable=False,
               existing_server_default=sa.text('0.0'))
    op.alter_column('attendance_records', 'status',
               existing_type=sa.Enum('Present', 'Absent', 'HALF_DAY', name='attendancestatus'),
               type_=postgresql.ENUM('Present', 'Absent', 'Half-day', name='attendance_status'),
               existing_nullable=False)
    # ### end Alembic commands ###
